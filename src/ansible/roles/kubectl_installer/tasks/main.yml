---

- name: Install package requirements
  apt:
    name:
      - python3-pip

- name: Install python requirements
  pip:
    name:
      - kubernetes

- name: Download helm binary
  get_url:
    url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
    checksum: sha256:https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz.sha256sum
    dest: /tmp/helm-{{ helm_version }}.tar.gz
    owner: root
    group: root
    mode: 0755

- name: Create temp helm folder
  ansible.builtin.file:
    path: /tmp/helm-{{ helm_version }}
    state: directory

- name: Extract helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm-{{ helm_version }}.tar.gz
    dest: /tmp/helm-{{ helm_version }}
    remote_src: yes

- name: Install helm binary
  ansible.builtin.copy:
    src: /tmp/helm-{{ helm_version }}/linux-amd64/helm
    dest: /usr/local/bin/helm
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: Add cert-manager chart repo
  kubernetes.core.helm_repository:
    name: cert-manager
    repo_url: "https://charts.jetstack.io"

- name: Add Rancher chart repo
  kubernetes.core.helm_repository:
    name: rancher-stable
    repo_url: "https://releases.rancher.com/server-charts/stable"

- name: Add Rook-Ceph chart repo
  kubernetes.core.helm_repository:
    name: rook-ceph
    repo_url: "https://charts.rook.io/release"

- name: Deploy cert-manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: cert-manager/cert-manager
    chart_version: v1.5.1
    release_namespace: cert-manager
    create_namespace: true
    wait: true
    values:
      installCRDs: true

- name: Deploy Rook-Ceph
  kubernetes.core.helm:
    name: rook-ceph
    chart_ref: rook-ceph/rook-ceph
    release_namespace: rook-ceph
    create_namespace: true
    wait: true

- name: Deploy Rook-Ceph-Cluster
  kubernetes.core.helm:
    name: rook-ceph-cluster
    chart_ref: rook-ceph/rook-ceph-cluster
    release_namespace: rook-ceph
    create_namespace: true
    wait: true
    values:
      # TODO: Configure for redundency
      configOverride: |
        [global]
        osd_pool_default_size = 1
        mon_warn_on_pool_no_redundancy = false
        bdev_flock_retry = 20
        bluefs_buffered_io = false
      cephClusterSpec:
        mon:
          # TODO: 3 instances on separate nodes
          count: 1
          allowMultiplePerNode: true
        mgr:
          # TODO: 3 instances on separate nodes
          count: 1
          allowMultiplePerNode: true
        dashboard:
          enabled: true
        crashCollector:
          # TODO: Enable
          disable: true
        storage:
          useAllNodes: true
          useAllDevices: true
          #deviceFilter:
        monitoring:
          enabled: false
        healthCheck:
          daemonHealth:
            mon:
              interval: 45s
              timeout: 600s
        disruptionManagement:
          managePodBudgets: true

- name: Deploy Rancher
  kubernetes.core.helm:
    name: rancher
    chart_ref:  rancher-stable/rancher
    release_namespace: cattle-system
    create_namespace: true
    wait: true
    values:
      hostname: rancher.service.marms
      ingress:
        tls:
          source: rancher
