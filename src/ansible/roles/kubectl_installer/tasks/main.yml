---

- name: Download helm binary
  get_url:
    url: https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz
    checksum: sha256:https://get.helm.sh/helm-{{ helm_version }}-linux-amd64.tar.gz.sha256sum
    dest: /tmp/helm-{{ helm_version }}.tar.gz
    owner: root
    group: root
    mode: 0755

- name: Create temp helm folder
  ansible.builtin.file:
    path: /tmp/helm-{{ helm_version }}
    state: directory

- name: Extract helm binary
  ansible.builtin.unarchive:
    src: /tmp/helm-{{ helm_version }}.tar.gz
    dest: /tmp/helm-{{ helm_version }}
    remote_src: yes

- name: Install helm binary
  ansible.builtin.copy:
    src: /tmp/helm-{{ helm_version }}/linux-amd64/helm
    dest: /usr/local/bin/helm
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: Add cert-manager chart repo
  kubernetes.core.helm_repository:
    name: cert-manager
    repo_url: "https://charts.jetstack.io"

- name: Add Argo CD chart repo
  kubernetes.core.helm_repository:
    name: argo-cd
    repo_url: "https://argoproj.github.io/argo-helm"

- name: Deploy cert-manager
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: cert-manager/cert-manager
    chart_version: v1.0.4
    release_namespace: cert-manager
    create_namespace: true

- name: Deploy ArgoCD
  kubernetes.core.helm:
    name: argocd
    chart_ref:  argo-cd/argo-cd
    release_namespace: argocd
    create_namespace: true
    values:
      server:
        extraArgs:
        - --insecure
        ingress:
          enabled: true
          hosts: ['argocd.service.marms']
          annotations:
            traefik.ingress.kubernetes.io/frontend-entry-points: http,https
            traefik.ingress.kubernetes.io/redirect-entry-point: https
            traefik.ingress.kubernetes.io/router.tls: "true"

- name: Create a Service object from an inline definition
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: adguard-home
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: 'https://k8s-at-home.com/charts/'
          targetRevision: 5.0.1
          chart: adguard-home
        destination:
          server: 'https://kubernetes.default.svc'
          namespace: adguard
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true